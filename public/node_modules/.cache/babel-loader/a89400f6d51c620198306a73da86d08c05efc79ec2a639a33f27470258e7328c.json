{"ast":null,"code":"var _jsxFileName = \"/Users/sasy/Desktop/FS0623-repo-main 2/Sett2/Giorno1/esercizio/src/components/CommentArea.jsx\";\nimport { Component } from 'react';\nimport CommentsList from './CommentsList';\nimport AddComment from './AddComment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CommentArea extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      comments: []\n    };\n    this.aggiornaCommenti = () => {\n      this.getComments();\n    };\n    this.getComments = () => {\n      fetch('https://striveschool-api.herokuapp.com/api/comments/' + this.props.bookId, {\n        headers: {\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTlkNGIyMmU2Mjg4NjAwMTg4M2YzZTQiLCJpYXQiOjE3MDQ4MDcyMDIsImV4cCI6MTcwNjAxNjgwMn0.e7OmQxOgIHbkBsvGfPEfa5XC4EmRKU8OEByZa3ytfIQ'\n        }\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          throw new Error('errore nel recupero dei commenti');\n        }\n      }).then(arrayOfComments => {\n        console.log(arrayOfComments);\n        this.setState({\n          comments: arrayOfComments\n        });\n      }).catch(err => {\n        console.log('error', err);\n      });\n    };\n  }\n  // lo commento perchè all'avvio non ci sarà mai più bisogno di invocare getComments!\n  // lo devo fare ora OGNI VOLTA che cambio il libro selezionato...\n  // componentDidMount = () => {\n  //   // viene eseguito una volta sola, all'avvio del componente!\n  //   // ora faremo la fetch per recuperare i commenti\n  //   if (this.props.bookId) {\n  //     this.getComments()\n  //   }\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    // dobbiamo riconoscere ogni cambio di asin selezionato\n    if (prevProps.bookId !== this.props.bookId) {\n      // è cambiato il bookId, quindi il libro selezionato!\n      // qua facciamo la fetch\n      this.getComments();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CommentsList, {\n          reviews: this.state.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AddComment, {\n          bookId: this.props.bookId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default CommentArea;","map":{"version":3,"names":["Component","CommentsList","AddComment","CommentArea","state","comments","aggiornaCommenti","getComments","fetch","props","bookId","headers","Authorization","then","res","ok","json","Error","arrayOfComments","console","log","setState","catch","err","componentDidUpdate","prevProps","prevState","render"],"sources":["/Users/sasy/Desktop/FS0623-repo-main 2/Sett2/Giorno1/esercizio/src/components/CommentArea.jsx"],"sourcesContent":["import { Component } from 'react'\nimport CommentsList from './CommentsList'\nimport AddComment from './AddComment'\n\nclass CommentArea extends Component {\n  state = {\n    comments: [],\n  }\n\n  // lo commento perchè all'avvio non ci sarà mai più bisogno di invocare getComments!\n  // lo devo fare ora OGNI VOLTA che cambio il libro selezionato...\n  // componentDidMount = () => {\n  //   // viene eseguito una volta sola, all'avvio del componente!\n  //   // ora faremo la fetch per recuperare i commenti\n  //   if (this.props.bookId) {\n  //     this.getComments()\n  //   }\n  // }\n\n  componentDidUpdate(prevProps, prevState) {\n    // dobbiamo riconoscere ogni cambio di asin selezionato\n    if (prevProps.bookId !== this.props.bookId) {\n      // è cambiato il bookId, quindi il libro selezionato!\n      // qua facciamo la fetch\n      this.getComments()\n    }\n  }\n\n  aggiornaCommenti = () => {\n    this.getComments()\n  }\n\n  getComments = () => {\n    fetch(\n      'https://striveschool-api.herokuapp.com/api/comments/' +\n        this.props.bookId,\n      {\n        headers: {\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NTlkNGIyMmU2Mjg4NjAwMTg4M2YzZTQiLCJpYXQiOjE3MDQ4MDcyMDIsImV4cCI6MTcwNjAxNjgwMn0.e7OmQxOgIHbkBsvGfPEfa5XC4EmRKU8OEByZa3ytfIQ',\n        },\n      }\n    )\n      .then((res) => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          throw new Error('errore nel recupero dei commenti')\n        }\n      })\n      .then((arrayOfComments) => {\n        console.log(arrayOfComments)\n        this.setState({\n          comments: arrayOfComments,\n        })\n      })\n      .catch((err) => {\n        console.log('error', err)\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <CommentsList reviews={this.state.comments} />\n        </div>\n        <div>\n          <AddComment bookId={this.props.bookId} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CommentArea\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AAAA;AAErC,MAAMC,WAAW,SAASH,SAAS,CAAC;EAAA;IAAA;IAAA,KAClCI,KAAK,GAAG;MACNC,QAAQ,EAAE;IACZ,CAAC;IAAA,KAqBDC,gBAAgB,GAAG,MAAM;MACvB,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC;IAAA,KAEDA,WAAW,GAAG,MAAM;MAClBC,KAAK,CACH,sDAAsD,GACpD,IAAI,CAACC,KAAK,CAACC,MAAM,EACnB;QACEC,OAAO,EAAE;UACPC,aAAa,EACX;QACJ;MACF,CAAC,CACF,CACEC,IAAI,CAAEC,GAAG,IAAK;QACb,IAAIA,GAAG,CAACC,EAAE,EAAE;UACV,OAAOD,GAAG,CAACE,IAAI,EAAE;QACnB,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;QACrD;MACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,eAAe,IAAK;QACzBC,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;QAC5B,IAAI,CAACG,QAAQ,CAAC;UACZhB,QAAQ,EAAEa;QACZ,CAAC,CAAC;MACJ,CAAC,CAAC,CACDI,KAAK,CAAEC,GAAG,IAAK;QACdJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEG,GAAG,CAAC;MAC3B,CAAC,CAAC;IACN,CAAC;EAAA;EAlDD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,kBAAkB,CAACC,SAAS,EAAEC,SAAS,EAAE;IACvC;IACA,IAAID,SAAS,CAACf,MAAM,KAAK,IAAI,CAACD,KAAK,CAACC,MAAM,EAAE;MAC1C;MACA;MACA,IAAI,CAACH,WAAW,EAAE;IACpB;EACF;EAmCAoB,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAA,uBACE,QAAC,YAAY;UAAC,OAAO,EAAE,IAAI,CAACvB,KAAK,CAACC;QAAS;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC1C,eACN;QAAA,uBACE,QAAC,UAAU;UAAC,MAAM,EAAE,IAAI,CAACI,KAAK,CAACC;QAAO;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACrC;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEA,eAAeP,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}